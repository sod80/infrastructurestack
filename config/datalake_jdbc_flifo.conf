input{

	jdbc {
		jdbc_driver_library => "/home/mysql-connector-java-5.1.47-bin.jar"
		jdbc_driver_class => "com.mysql.jdbc.Driver"
		jdbc_connection_string => "jdbc:mysql://10.0.75.1:3306/flifo"
		jdbc_fetch_size => 200
		jdbc_page_size => 150
		jdbc_paging_enabled => true
		jdbc_user => "flifoapi"
		jdbc_password => "flifoapi"
		schedule => "* * * * *"
		use_column_value => true
		tracking_column => "id"
    	tracking_column_type => "numeric"
		statement => "select id, airportcode, airlinecode, flightnumber, scheduled, adi, payload, DATE_FORMAT(created, '%Y-%m-%d %T') AS created, version, provider, flightkey from `flifo`.`flight_history` where created > :sql_last_value"
		last_run_metadata_path => "/etc/logstash/conf.d/.datalake_jdbc_flifo_history_last_run"
		type => "flifo_flight_history_tbl"
	}
}

filter {

	if [type] == "flifo_flight_history_tbl" {
	
		json {
			source => "payload"   
		}

		mutate {
			add_field => { 
				"record_status" => "create"
				"action_logs" => "none"
				"action_service" => "none"
				"kibana_dashboard" => "http://kibana-dots.api.aero:5601/app/kibana#/dashboards?_g=()"
				"time_difference" => 0
			}
		}

		# match created date and use as timestamp
		date {
			locale => "en"
			timezone => "UTC"
			match => [ "created", "YYYY-MM-dd HH:mm:ss" ]
			target => "@timestamp"
		}

		# Check if update received is present
		if ([update][received]) {

			mutate {
				add_field => { 
					"time_of_update" => "empty"
				}
			}
			
			date {
				match => [ "[update][received]", "ISO8601" ]
				target => "time_of_update"
			}			

			# Calculate difference between created (timestamp) and update received.
			ruby {
				init => "require 'time'"
				code => "diff = (event.get('@timestamp') - event.get('time_of_update'))
							event.set('time_difference', diff);"
				add_tag => [ "time_difference_calculated" ]
			}

			mutate {
				replace => [ "record_status", "update" ]
			}

			# convert current field to String
			mutate {
				convert => { 
					"[update][current]" => "string"
				}
			}
		}

		mutate {
			convert => { 
				"time_difference" => "integer"
			}
		}
	
	# TODO: Add Explaination about how this works
		if [time_difference] >= 10 {
			throttle {
				after_count => 1000
				period => 300
				max_age => 360
				key => "flighthistory_diff"
				add_tag => "alarm-fh"
			}
		}
		if "alarm-fh" in [tags] {
			throttle {
				after_count => 10
				period => 120
				key => "flighthistory_diff_alarms"
				add_tag => "throttled-fh"
			}
		}
	}

}

output {
	# Flight History Flifo
	if [type] == "flifo_flight_history_tbl" {

		elasticsearch {
			#hosts => ["elk-elasticsearch-lb-619230006.eu-west-2.elb.amazonaws.com:9200"]
			hosts => ["18.202.198.148:9200"]
			index => "flifo-flighthistory-%{+YYYY.MM.dd}"
			document_id => "%{id}"
		}
	}
} 